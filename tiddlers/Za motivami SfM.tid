created: 20201011143836730
modified: 20201011181221561
tags: soft tool
title: За мотивами SfM

За результатами більш докладного ознайомлення з [[методологією SfM|Розберемось із SfM]] в технологію //Treemap// внесені деякі корективи, результати випробування яких описані нижче. 

!! WORKFLOW 

Робочий процес обробки знімків побудований на //Octave// і складається з таких етапів:

; Сколка
: Спочатку проводиться так звана //сколка// точок (це визначення координат потрібних точок - //features// - у пікселах знімка у //equirectangular// проєкції; термін //сколка// походить від застарілої техніки копіювання паперових креслень шляхом проколювання голкою) з допомогою процедури <<mono grip.m>>. Результат сколки зберігається у файлі <<mono gripped.json>>.

; Ланцюги точок
: Наступним кроком окремі точки з різних знімків, що ідентифікують той самий об'єкт утворюють //ланцюг// (//chain//) точок. Виявлені ланцюги зберігаються у файлі <<mono chained-features.csv>>. Фактично це таблиця, рядки якої - окремі ланцюги, а колонки - індекси знімків, у якості значення клітинки таблиці зберігається індекс сколотої точки з файлу  <<mono gripped.json>>. Поки що утворення ланцюгів відбувається вручну, тут потрібна автоматизація. <div>

Зчитування даних ланцюгів у структуру <<mono cf>> (//chained features//) проводиться процедурою <<mono read_chained_features2.m>>.</div>

; Напрямок погляду камери
: Далеко не всі камери, якими проводиться зйомка забезпечують інформацію про азимут погляду камери, а ті які надають таку інформацію не гарантують достатню точність цього азимуту. Тому процедура <<mono set_shots_azimuth.m>> встановлює перше наближення значення азимуту кожного знімку як напрямку на наступний знімок. За напрям останнього в серії знімку береться напрям передостаннього.

; Місцева система координат
: Для подальших розрахунків зручно використати Евклідову (картезіанську) систему 2D координат: <<mono Y>> - напрямок на північ, <<mono X>> - напрямок на схід, одиниця довжини - метр, кут повороту обраховуються від півночі за годинниковою стрілкою. Процедура << mono set_shots_xy_m.m>> встановлює місцевий початок системи координат для серії знімків у константу <<mono TL.params.orig_latlong>>.

; Підгонка знімків
: Надзвичайно ефективним прийомом для виявлення відносних місцевих координат об'єктів є підгонка координат і напрямків знімків з допомогою оптимізації сумарної дисперсії отриманих координат об'єктів по кожному окремому ланцюгу довжиною 3 і більше точок. Координати розраховуються [[методом триангуляції|Ще раз про трикутник]] для кожної пари точок в ланцюгу. У разі, коли об'єкт спостерігається на <<mono n>> знімках, то кількість пар буде оцінена як комбінація 2 з <<mono n>> або $$C^k_n$$. Для 3, 4 та 5 знімків це буде 3, 6 та 10 пар на ланцюг. Відповідно маємо таку ж кількість оцінок координат на ланцюг, за сукупністю яких розраховуємо дисперсію оцінки координати кожного об'єкту. Об'єднавши значення дисперсії окремих об'єктів у єдиний інтегральний показник, запускаємо процедуру його мінімізації (оптимізації). В якості змінних використовуються координати і напрямки знімків.<div>

Оптимізація виконується методом загальної нелінійної мінімізації з використанням послідовного вирішувача квадратичного програмування [[sqp|https://octave.org/doc/v5.2.0/Nonlinear-Programming.html#Nonlinear-Programming]].

Процедура оптимізації проводяться з цільовою функцією <<mono target_fun>>. Також ретельна підготовка даних проводиться з допомогою процедури <<mono prepare_optimization>>. Всі процедури оптимізації розміщені у файлі <<mono triangul.m>>.

Додатковим здобутком оптимізації є взаємне впорядкування координат і напрямків задіяних знімків. З іншого боку, процедура оптимізації є недостатньою - вона добре узгоджує взаємні координати об'єктів і знімків, але не абсолютні (географічні).</div>

; Короткі ланцюги
: Результатом оптимізації є ''оновлені'' координати і напрямки знімків.  Користуючись ними обраховуються і поєднуються у єдиний список виміряних об'єктів як довгі (> 2), так і короткі (== 2) ланцюги.

; Прив'язка до референтних координат
: Виміряні об'єкти включають також реперні точки (репери або //GCP - ground control points//), по яких наявні референтні координати, що зберігаються у <<mono gcp-observations.json>>. За наявності 2 і більше реперів можна провести порівняння їхніх поміряних (обрахованих) і референтних координат. У результаті цього порівняння будуть отримані кут довороту і зміщення для всього набору поміряних даних включно зі знімками з допомогою процедур <<mono fit_measured>> і <<mono rottrans2d>>. 

; Перехід до гео координат і збереження результату
: Конвертування скоригованих виміряних координат об'єктів і знімків з метричних (евклідових) до географічних (широта, довгота) координат проводиться процедурою <<mono reckon2.m>> з подальшим збереженням у форматі CSV у `result_trees.csv` і `result_shots.csv`, відповідно, з допомогою <<mono write_result_csv>>.

!! РЕЗУЛЬТАТИ

У якості тесту робочого процесу оброблено три послідовних панорамних знімки, що були зроблені на території НАУ. На трьох знімках сколкою було відмічено 143 точки. З них було утворено 40 ланцюгів (об'єктів) включно з двома реперами. 

<div class="flex-row">
  <div class="flex-col-2">
    <<image-basic img/26-triangul-before-adjustment.svg width:95% align:center caption:"(26)">>
  </div>
  <div class="flex-col-2">
    <<image-basic img/28-triangul-after-adjustment.svg width:95% align:center caption:"(28)">>
  </div>
  <div class="flex-col-2">
    <<image-basic img/27-dispersion-before-adjustment.svg width:95% align:center caption:"(27)">>
  </div>
  <div class="flex-col-2">
    <<image-basic img/29-dispersion-after-adjustment.svg width:95% align:center caption:"(29)">>
  </div>
  <div class="flex-col-4" style="padding-left:24px;padding-right:24px;">
//Рисунки 26-29. Визначення координат об'єктів методом триангуляції до і після оптимізації (26 і 28). Також представлена розподіл дисперсії визначення координат до і після оптимізації. Медіана цього розподілу склала 4.7 і 0.22 м  до і після оптимізації відповідно.//
  </div>
</div>

<<alert-success "В результаті підгонки координат і напрямків знімків інтегральна дисперсія покращилась (зменшилась) більш ніж у 20 разів - з 4.7 до 0.22 метрів. З урахуванням того, що точність стандартних GPS приймачів, що використовуються у камерах, в умовах міської забудови та й ще під кронами дерев зазвичай складає більше 5 метрів">>

<<image-basic img/30-adjusted-result.png width:85% align:center caption:"Рисунок 30. Виявлені і опрацьовані 38 дерев і 2 реперні точки (червоне кільце - істинне положення, червоне коло - обраховане положення). Також представлені координати знімків (червоним) до опрацювання і (синім) після опрацювання.">>

В цілому вся сукупність дерев і знімків має бути сзунута приблизно на 1 м на північ. Також обраховані координати реперів показали відносно велике відхилення. Вочевидь, однією причин останнього став невдалий вибір реперів. Зокрема правий на рисунку репер утворює зі знімками трикутник з двома дуже гострими кутами, що значно погіршує точність триангуляції.

!! TODO

# Подальше опрацювання методології і планування вимірювань.
# Автоматизація сколки.
# Автоматизація виявлення ланцюгів з точок, що відображають один і той же об'єкт, на різних знімках - <<mono chained-features.csv>>.
# Розпізнавання і виявлення специфічних об'єктів на знімках (зокрема, дерев).